/* jsClass [Beta 1 (02 Aug 2011)] : See license and more details at [github.com/pic-o/jsClass] */
(function(){if(!this.Class){this.Class=function a(){}}Class.prototype=Class;if(!Class._super){Class._super=function b(){var a=b&&b.caller||arguments&&(arguments.caller||arguments.callee&&arguments.callee.caller);if(a===null){throw new TypeError("Class._super(): Failed to get calling function : Caller fetch not supported!")}var c=null;while(c===null){for(var d in this){if(this[d]==a){c=d}}if(c===null){e=Object.getPrototypeOf(e);if(e===null){throw new TypeError("Class._super(): calling function not found in Class Object");return}}}var e=this;var f=null;while(f===null){if(e.hasOwnProperty(c)&&e[c]==a){f=Object.getPrototypeOf(e)}else{e=Object.getPrototypeOf(e);if(e===null){throw new TypeError("Class._super(): Class object has no prototype to call _super() for :"+c);return}}}if(typeof f[c]==="function"){return f[c].apply(this,arguments)}else{throw new TypeError("Class._super(): Fail to find _super() target in __proto__ for: "+c)}}}if(!Class._extend){Class._extend=function(a,b,c){if(!b){if(this.prototype&&this.prototype instanceof Class){b=this.prototype}else if(this instanceof Class||this===Class){b=this}else{throw new Error("Class._extend() : Can only run from valid Class Functions, without [extFrom] parameter");return}}else{if(typeof b==="function"&&b.prototype){b=b.prototype}if(Object(b)===b){if(!c){if(!(b===Class||b instanceof Class)){throw new Error("Class._extend(): Extension target is not a Class object [set notStrict = true, to skip Class check]");return}}}else{throw new Error("Class._extend(): Extension object (or function prototype), Must be atleast an object");return}}var d=function(){if(this["_init"]!==null&&typeof this["_init"]==="function"){var a=this["_init"].apply(this,arguments);if(a){return a}}return this};var e=function(){};e.prototype=b;d.prototype=Object.extend(new e,a);d._extend=Class._extend;return d}}})()